{"version":3,"sources":["components/header/AppHeader.js","components/home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["AppHeader","background","d","justifyContent","alignItems","padding","maxW","minW","boxShadow","p","rounded","bg","fontWeight","letterSpacing","fontSize","getRandomInt","min","max","Math","ceil","floor","random","Home","rules","React","useState","value","src","first","setFirst","second","setSecond","third","setThird","result","setResult","calculate","a","b","c","roll","ExplainResult","makeBold","item","style","border","color","borderColor","borderRadius","abs","ListItems","map","r","i","as","CheckIcon","useEffect","w","columns","spacing","pb","size","onClick","leftIcon","Spinner","colorScheme","variant","h","boxSize","fallbackSrc","alt","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RAYeA,MAVf,WACC,OACC,cAAC,IAAD,CAAKC,WAAW,WAAWC,EAAE,OAAOC,eAAe,SAASC,WAAW,SAASC,QAAQ,IAAxF,SACC,cAAC,IAAD,CAAKC,KAAK,MAAMC,KAAM,CAAC,KAAM,KAAM,KAAM,MAAOC,UAAU,KAAKC,EAAE,IAAIC,QAAQ,KAAKC,GAAG,QAArF,SACC,cAAC,IAAD,CAAQC,WAAW,QAAQC,cAAc,MAAMC,SAAS,MAAxD,gC,wBCAJ,SAASC,EAAaC,EAAKC,GAG1B,OAFAD,EAAME,KAAKC,KAAKH,GAChBC,EAAMC,KAAKE,MAAMH,GACVC,KAAKE,MAAMF,KAAKG,UAAYJ,EAAMD,EAAM,IAAMA,EAmFvCM,MAhFf,WACC,IAAMC,EAAQ,CAAC,0CAA2C,iFAAkF,iDAD7H,EAEWC,IAAMC,SAAS,CAAEC,MAAO,EAAGC,IAAK,gBAF3C,mBAERC,EAFQ,KAEDC,EAFC,OAGaL,IAAMC,SAAS,CAAEC,MAAO,EAAGC,IAAK,gBAH7C,mBAGRG,EAHQ,KAGAC,EAHA,OAIWP,IAAMC,SAAS,CAAEC,MAAO,EAAGC,IAAK,gBAJ3C,mBAIRK,EAJQ,KAIDC,EAJC,OAKaT,IAAMC,SAAS,CAAEC,MAAO,IALrC,mBAKRQ,EALQ,KAKAC,EALA,KAMTC,EAAY,SAACC,EAAGC,EAAGC,GAAP,OAAaF,GAAKC,EAAI,GAAK,EAAI,GAAK,GAAKC,GACrDC,EAAO,WAAO,IAAD,EACA,CAACzB,EAAa,EAAG,GAAIA,EAAa,EAAG,GAAIA,EAAa,EAAG,IAApEsB,EADW,KACRC,EADQ,KACLC,EADK,KAElBV,EAAS,CAAEH,MAAOW,EAAGV,IAAI,SAAD,OAAWU,EAAX,UACxBN,EAAU,CAAEL,MAAOY,EAAGX,IAAI,SAAD,OAAWW,EAAX,UACzBL,EAAS,CAAEP,MAAOa,EAAGZ,IAAI,SAAD,OAAWY,EAAX,UACxBJ,EAAU,CAAET,MAAOU,EAAUC,EAAGC,EAAGC,MAE9BE,EAAgB,WACrB,IAEMC,EAAW,SAAAC,GAAI,OAAI,sBAAMC,MAAO,CAAEhC,WAAY,QAA3B,SAAsC+B,KAC/D,OACC,cAAC,IAAD,CAAQE,OAAO,MAAM5C,WAAW,WAAW6C,MAAM,WAAWC,YAAY,WAAWtC,EAAE,IAAIuC,aAAa,KAAtG,SACC,eAAC,IAAD,mBACON,EAASxB,KAAK+B,IAAIf,EAAOR,QADhC,IAJ2BR,KAAK+B,IAAIf,EAAOR,OAAS,EAAI,QAAU,OAIlE,IAC4DgB,EANpCZ,EAAOJ,MAAQ,GAAK,EAAI,UAAY,kBAWzDwB,EAAY,kBACjB3B,EAAM4B,KAAI,SAACC,EAAGC,GACb,OACC,eAAC,IAAD,WACC,cAAC,IAAD,CAAUC,GAAIC,IAAWT,MAAM,aAC9BM,IAFaC,OASlB,OAFA7B,IAAMgC,UAAUhB,EAAM,IAGrB,qCACC,cAAC,EAAD,IACA,cAAC,IAAD,CAAQvC,WAAW,WAAWwD,EAAE,OAAhC,SACC,eAAC,IAAD,CAAYpD,QAAQ,IAAIqD,QAAS,CAAC,GAAIC,QAAQ,OAA9C,UACC,eAAC,IAAD,CAAKrD,KAAK,KAAKC,KAAM,CAAC,KAAM,KAAM,OAAQ,MAAOC,UAAU,KAAKC,EAAE,IAAIC,QAAQ,KAAKC,GAAG,QAAtF,UACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAKE,cAAc,MAAMD,WAAW,OAAOkC,MAAM,WAAWhC,SAAU,CAAC,KAAM,MAAO,OAAQ8C,GAAG,IAA/F,6BAID,cAAC,IAAD,CAAMD,QAAS,EAAf,SACC,cAAC,IAAD,UACC,cAAC,IAAD,CAAK7C,SAAU,CAAC,KAAM,MAAtB,SACC,cAACoC,EAAD,UAIH,cAAC,IAAD,UACC,cAAC,IAAD,CAAQW,KAAK,KAAKC,QAAStB,EAAMuB,SAAU,cAACC,EAAA,EAAD,IAAiBC,YAAY,OAAOC,QAAQ,QAAvF,uBAKF,cAAC,IAAD,CAAK5D,KAAK,KAAKE,UAAU,KAAKC,EAAE,IAAIC,QAAQ,KAAKC,GAAG,QAAQJ,KAAM,CAAC,KAAM,KAAM,OAAQ,MAAvF,SACC,cAAC,IAAD,CAAQ4D,EAAE,OAAV,SACC,eAAC,IAAD,CAAM/D,WAAW,SAAjB,UACC,cAAC,IAAD,CAAOgE,QAAS,CAAC,OAAQ,OAAQ,OAAQ,QAASC,YAAY,cAAc1C,IAAKC,EAAMD,IAAK2C,IAAI,KAChG,cAAC,IAAD,CAAOF,QAAS,CAAC,OAAQ,OAAQ,OAAQ,QAASC,YAAY,cAAc1C,IAAKG,EAAOH,IAAK2C,IAAI,KACjG,cAAC,IAAD,CAAOF,QAAS,CAAC,OAAQ,OAAQ,OAAQ,QAASC,YAAY,cAAc1C,IAAKK,EAAML,IAAK2C,IAAI,YAInG,cAAC,IAAD,CAAKxD,SAAU,CAAC,KAAM,MAAO,OAAQR,KAAK,KAAKE,UAAU,KAAKC,EAAE,IAAIC,QAAQ,KAAKC,GAAG,QAAQJ,KAAM,CAAC,KAAM,KAAM,OAAQ,MAAvH,SACC,cAACkC,EAAD,eC1ES8B,MARf,WACC,OACC,qBAAKC,UAAU,MAAf,SACC,cAAC,EAAD,OCOYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCAdQ,IAASC,OACR,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,UACC,cAAC,EAAD,QAGFC,SAASC,eAAe,SAMzBb,M","file":"static/js/main.5ed70c7e.chunk.js","sourcesContent":["import { Box, Center } from \"@chakra-ui/layout\";\r\n\r\nfunction AppHeader() {\r\n\treturn (\r\n\t\t<Box background='pink.100' d='flex' justifyContent='center' alignItems='center' padding='4'>\r\n\t\t\t<Box maxW='4xl' minW={['xs', 'sm', 'md', 'lg']} boxShadow='md' p='4' rounded='md' bg='white'>\r\n\t\t\t\t<Center fontWeight=\"light\" letterSpacing='3px' fontSize=\"2xl\">Roll the dice</Center>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default AppHeader;\r\n","import { Box, Button, Center, Flex, List, ListIcon, ListItem, SimpleGrid } from \"@chakra-ui/react\";\r\nimport AppHeader from \"../header/AppHeader\";\r\nimport { CheckIcon, SpinnerIcon } from \"@chakra-ui/icons\";\r\nimport { Image } from \"@chakra-ui/react\";\r\nimport React from \"react\";\r\n\r\nfunction getRandomInt(min, max) {\r\n\tmin = Math.ceil(min);\r\n\tmax = Math.floor(max);\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nfunction Home() {\r\n\tconst rules = [\"The first dice is the value of the roll\", \"The second dice is the sign of the value, odd is negative and even is positive\", \"The third dice is the multiplier of the value\"];\r\n\tconst [first, setFirst] = React.useState({ value: 1, src: \"/dice/1.png\" });\r\n\tconst [second, setSecond] = React.useState({ value: 1, src: \"/dice/1.png\" });\r\n\tconst [third, setThird] = React.useState({ value: 1, src: \"/dice/1.png\" });\r\n\tconst [result, setResult] = React.useState({ value: 1 });\r\n\tconst calculate = (a, b, c) => a * (b % 2 == 0 ? 1 : -1) * c;\r\n\tconst roll = () => {\r\n\t\tconst [a, b, c] = [getRandomInt(1, 6), getRandomInt(1, 6), getRandomInt(1, 6)];\r\n\t\tsetFirst({ value: a, src: `/dice/${a}.png` });\r\n\t\tsetSecond({ value: b, src: `/dice/${b}.png` });\r\n\t\tsetThird({ value: c, src: `/dice/${c}.png` });\r\n\t\tsetResult({ value: calculate(a, b, c) });\r\n\t};\r\n\tconst ExplainResult = () => {\r\n\t\tconst fwdOrBckwd = () => (second.value % 2 == 0 ? \"forward\" : \"backward\");\r\n\t\tconst oneOrMultiple = () => (Math.abs(result.value) > 1 ? \"tiles\" : \"tile\");\r\n\t\tconst makeBold = item => <span style={{ fontWeight: \"bold\" }}>{item}</span>;\r\n\t\treturn (\r\n\t\t\t<Center border='2px' background='pink.200' color='pink.800' borderColor='pink.500' p='2' borderRadius='xl'>\r\n\t\t\t\t<Box>\r\n\t\t\t\t\tMove {makeBold(Math.abs(result.value))} {oneOrMultiple()} {makeBold(fwdOrBckwd())}\r\n\t\t\t\t</Box>\r\n\t\t\t</Center>\r\n\t\t);\r\n\t};\r\n\tconst ListItems = () =>\r\n\t\trules.map((r, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<ListItem key={i}>\r\n\t\t\t\t\t<ListIcon as={CheckIcon} color='pink.500' />\r\n\t\t\t\t\t{r}\r\n\t\t\t\t</ListItem>\r\n\t\t\t);\r\n\t\t});\r\n\r\n\tReact.useEffect(roll, []);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AppHeader></AppHeader>\r\n\t\t\t<Center background='pink.100' w='100%'>\r\n\t\t\t\t<SimpleGrid padding='4' columns={[1]} spacing='1rem'>\r\n\t\t\t\t\t<Box maxW='lg' minW={[\"xs\", \"sm\", \"100%\", \"xl\"]} boxShadow='md' p='4' rounded='md' bg='white'>\r\n\t\t\t\t\t\t<Center>\r\n\t\t\t\t\t\t\t<Box letterSpacing='2px' fontWeight='bold' color='pink.400' fontSize={[\"xl\", \"2xl\", \"3xl\"]} pb='4'>\r\n\t\t\t\t\t\t\t\tThe rules are\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t\t<List spacing={3}>\r\n\t\t\t\t\t\t\t<Center>\r\n\t\t\t\t\t\t\t\t<Box fontSize={[\"md\", \"xl\"]}>\r\n\t\t\t\t\t\t\t\t\t<ListItems></ListItems>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t<Center>\r\n\t\t\t\t\t\t\t<Button size='lg' onClick={roll} leftIcon={<SpinnerIcon />} colorScheme='pink' variant='solid'>\r\n\t\t\t\t\t\t\t\tROLL\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box maxW='lg' boxShadow='md' p='4' rounded='md' bg='white' minW={[\"xs\", \"sm\", \"100%\", \"xl\"]}>\r\n\t\t\t\t\t\t<Center h='full'>\r\n\t\t\t\t\t\t\t<Flex alignItems='center'>\r\n\t\t\t\t\t\t\t\t<Image boxSize={[\"4rem\", \"4rem\", \"6rem\", \"8rem\"]} fallbackSrc='/dice/1.png' src={first.src} alt='' />\r\n\t\t\t\t\t\t\t\t<Image boxSize={[\"4rem\", \"4rem\", \"6rem\", \"8rem\"]} fallbackSrc='/dice/1.png' src={second.src} alt='' />\r\n\t\t\t\t\t\t\t\t<Image boxSize={[\"4rem\", \"4rem\", \"6rem\", \"8rem\"]} fallbackSrc='/dice/1.png' src={third.src} alt='' />\r\n\t\t\t\t\t\t\t</Flex>\r\n\t\t\t\t\t\t</Center>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t\t<Box fontSize={[\"lg\", \"2xl\", \"3xl\"]} maxW='lg' boxShadow='md' p='4' rounded='md' bg='white' minW={[\"xs\", \"sm\", \"100%\", \"xl\"]}>\r\n\t\t\t\t\t\t<ExplainResult></ExplainResult>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</SimpleGrid>\r\n\t\t\t</Center>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Home;\r\n","import \"./App.css\";\r\nimport Home from \"./components/home/Home\";\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='App'>\r\n\t\t\t<Home></Home>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { ChakraProvider } from \"@chakra-ui/react\";\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<ChakraProvider>\r\n\t\t\t<App />\r\n\t\t</ChakraProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}